@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Routing;
@using Syncfusion.Blazor.Spinner;
@inject IJSRuntime JsRuntime;
@namespace FloorPlanner.Shared

<div class="sb-body-overlay @HideClass @TransClass">
    <div id="loader" class="sb-loading @HideInnerClass">
        <SfSpinner Size="40" Type="SpinnerType.Bootstrap4" Visible="true"></SfSpinner>
    </div>
</div>

@code {
    /// <summary>
    /// Represents the MainLayout instance associated with the current component.
    /// </summary>
    internal MainLayout? Parent;
    /// <summary>
    /// Gets or sets the CSS class used to hide the main body overlay.
    /// </summary>
    [Parameter]
    public string? HideClass { get; set; }
    /// <summary>
    /// Gets or sets the CSS class used to hide the inner content.
    /// </summary>
    [Parameter]
    public string? HideInnerClass { get; set; }
    /// <summary>
    /// Gets or sets the CSS class used for transition effects.
    /// </summary>
    [Parameter]
    public string? TransClass { get; set; }
    /// <summary>
    /// Gets or sets a value indicating whether the SpinnerComponent is visible or not.
    /// </summary>
    private bool VisibleProperty { get; set; } = true;
    /// <summary>
    /// Sets the TransClass and HideClass properties to display a transition effect.
    /// </summary>
    public void ShowasTrans()
    {

        this.TransClass = "sb-trans";
        this.HideClass = string.Empty;
        this.StateHasChanged();
    }
    /// <summary>
    /// Shows the spinner component by setting TransClass, HideClass, and HideInnerClass to empty strings.
    /// </summary>
    public void Show()
    {

        this.TransClass = string.Empty;
        HideClass = string.Empty;
        this.HideInnerClass = string.Empty;
        this.StateHasChanged();
    }
    /// <summary>
    /// Hides the spinner component by setting TransClass to empty and HideClass/HideInnerClass to 'sb-hide'.
    /// </summary>
    public void Hide()
    {
        TransClass = string.Empty;
        HideClass = "sb-hide";
        this.HideInnerClass = "sb-hide";
        this.StateHasChanged();
    }
}

